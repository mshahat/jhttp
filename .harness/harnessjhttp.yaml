pipeline:
  name: harness-jhttp
  identifier: harnessjhttp
  projectIdentifier: githubharnessjhttp
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.mshahatgithub
        repoName: jhttp
        build: <+input>
  stages:
    - stage:
        name: built-jhttp
        identifier: builtjhttp
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: build
                  identifier: build
                  spec:
                    connectorRef: account.mshahatdockerhub
                    image: alpine:latest
                    shell: Bash
                    command: mvn -B package --file pom.xml
              - step:
                  type: BuildAndPushDockerRegistry
                  name: build-push-image
                  identifier: buildpushimage
                  spec:
                    connectorRef: account.mshahatdockerhub
                    repo: mshahat/harness-http
                    tags:
                      - latest
                    caching: true
          caching:
            enabled: true
            paths: []
          buildIntelligence:
            enabled: false
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.kindharnesslabforbuild
              namespace: harness-ci
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
    - stage:
        name: deploy-jhttp
        identifier: deployjhttp
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: servicejhttp
          environment:
            environmentRef: mshahatstaging
            deployToAll: false
            infrastructureDefinitions:
              - identifier: harnesslabk8sinfra
          execution:
            steps:
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDeployment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            type: Count
                            spec:
                              count: 1
                          skipDryRun: false
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDeployment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
            rollbackSteps:
              - step:
                  name: Canary Delete
                  identifier: rollbackCanaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
              - step:
                  name: Rolling Rollback
                  identifier: rollingRollback
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
